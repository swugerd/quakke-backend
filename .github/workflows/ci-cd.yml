name: CI/CD Pipeline

on:
  pull_request:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up SSH for Build
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: ðŸ”§ Build Docker Image on Remote Server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            cd ~/projects/quakke-backend/scripts
            if [[ $GITHUB_EVENT_NAME == 'pull_request' ]]; then
              bash build-stage.sh
            else
              bash build-prod.sh
            fi
          EOF

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up SSH for Deploy
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: ðŸ“¦ Deploy Docker Container to Remote Server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            cd ~/projects/quakke-backend/scripts
            if [[ $GITHUB_EVENT_NAME == 'pull_request' ]]; then
              bash deploy-stage.sh
            else
              bash deploy-prod.sh
            fi
          EOF

  cleanup:
    needs: deploy
    runs-on: ubuntu-latest
    if: ${{ success() }}
    steps:
      - name: Set up SSH for Cleanup
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: ðŸ§¹ Cleanup Docker Resources on Remote Server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            cd ~/projects/quakke-backend/scripts
            if [[ $GITHUB_EVENT_NAME == 'pull_request' ]]; then
              bash cleanup-stage.sh
            else
              bash cleanup-prod.sh
            fi
          EOF
