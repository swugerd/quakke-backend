name: Production Deployment

on:
  push:
    branches: [master]
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Type "deploy" to confirm production deployment'
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up SSH for Build
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: üîß Build Docker Image on Remote Server
        run: |
          echo "‚ÑπÔ∏è Building for PRODUCTION, branch: master"

          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << EOF
            export BRANCH="master"
            cd ~/projects/quakke-backend
            bash scripts/build-prod.sh
          EOF

  deploy:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: üì¶ Deploy to Production
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << EOF
            cd ~/projects/quakke-backend
            bash scripts/deploy-prod.sh
          EOF

      - name: Verify deployment
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << EOF
            cd ~/projects/quakke-backend
            curl -f http://localhost:PROD_PORT/health || exit 1
          EOF

  cleanup:
    needs: deploy
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: üßπ Cleanup Production Resources
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << EOF
            cd ~/projects/quakke-backend
            bash scripts/cleanup-prod.sh
          EOF
